[include]
	path = ~/.gitconfig.local

# set [user] name & email properties in .gitconfig.local

[alias]
	alias-list = config --get-regexp alias

	st = status
	rbs = !git pull --rebase --autostash --ff && git status
	sha = rev-parse --short

	logs = log --graph --pretty=format:'%C(red)%h%C(reset) - %s %C(green)(%cr) %C(bold blue)<%an>%C(reset)%C(yellow)%d%C(reset) %C(cyan)[%p]%C(reset)' --decorate=full  --abbrev-commit -25 --all
	flogs = log --graph --pretty=format:'%C(red)%h%C(reset) -%C(reset) %s %C(green)(%cr) %C(bold blue)<%an>%C(reset)%C(yellow)%d%C(reset) %C(cyan)[%p]%C(reset)' --decorate=full --abbrev-commit -25 --first-parent

	show-list = show --stat
	diff-list = diff --stat
	dft = difftool

	unstage = reset
	unstage-file = !git reset -- $1

	branches = branch -a
	branch-name = branch --show-current
	branch-parents = show-branch --list
	orphans = !git branch -vv | grep gone
	track-branch = "!git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`"
	
	mergediff = "!f(){ branch=\"$1\" ; into=\"$2\" ; git merge-tree $(git merge-base \"$branch\" \"$into\") \"$into\" \"$branch\" ; };f "
	mergetest = "!f(){ git mergediff $@ | sed -ne \"/^+<<</,/^+>>>/ p\" ; };f "
	
	ls-excluded = ls-files -o -i --exclude-standard --directory
	ls-untracked = ls-files -o --directory

	commend = commit --amend --no-edit
	amend = commit --amend
	squash = "!f(){ git reset --soft HEAD~${1} && git commit --edit -m\"$(git log --format=%B --reverse HEAD..HEAD@{1})\"; };f"

[core]
	preloadindex = true
	commentChar = *
	editor = vi
	quotepath = off

[pull]
	rebase = true

[rebase]
	autoStash = true

[push]
	default = current

[status]
	submoduleSummary = false

# set [diff] and [merge] in .gitconfig.local file

[difftool]
	prompt = false

[pager]
	difftool = true
		
[credential]
	helper = manager
[init]
	defaultBranch = main
